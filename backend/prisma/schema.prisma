// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  chessComUsername  String   @unique
  email             String?  @unique
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  games             Game[]
  
  @@map("users")
}

model Game {
  id              String   @id @default(cuid())
  userId          String
  chessComGameId  String   @unique
  pgn             String
  whitePlayer     String
  blackPlayer     String
  result          String
  timeControl     String
  whiteRating     Int?
  blackRating     Int?
  playedAt        DateTime
  importedAt      DateTime @default(now())
  
  user            User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  analysis        Analysis[]
  
  @@map("games")
}

model Analysis {
  id                  String   @id @default(cuid())
  gameId              String
  positionFen         String
  moveNumber          Int
  playerMove          String
  stockfishEvaluation Float
  bestMove            String
  bestLine            String?
  analysisDepth       Int      @default(15)
  mistakeSeverity     String?  // 'blunder', 'mistake', 'inaccuracy', 'good'
  timeSpentMs         Int?
  createdAt           DateTime @default(now())
  
  game                Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  
  @@map("analysis")
}